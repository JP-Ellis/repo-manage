---
name: test

permissions:
  contents: read

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  # Generic
  FORCE_COLOR: '1'
  CLICOLOR: '1'
  # Python
  HATCH_VERBOSE: '1'
  PYTHONUNBUFFERED: '1'
  STABLE_PYTHON_VERSION: '3.12'

jobs:
  complete:
    name: Completion check
    if: always()

    permissions:
      contents: none

    runs-on: ubuntu-latest
    needs:
      - format
      - lint
      - typecheck
      - test
      - spelling
      - pre-commit

    steps:
      - name: Failed
        run: exit 1
        if: >
          contains(needs.*.result, 'failure')
          || contains(needs.*.result, 'cancelled')
          || contains(needs.*.result, 'skipped')

  format:
    name: >-
      Format Python
      on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Set up uv
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231  # v5.3.1
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Install Python
        run: uv python install ${{ env.STABLE_PYTHON_VERSION }}

      - name: Install Hatch
        run: uv tool install hatch

      - name: Lint
        run: hatch run format

  lint:
    name: >-
      Lint Python
      on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Set up uv
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231  # v5.3.1
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Install Python
        run: uv python install ${{ env.STABLE_PYTHON_VERSION }}

      - name: Install Hatch
        run: uv tool install hatch

      - name: Lint
        run: hatch run lint

  typecheck:
    name: >-
      Typecheck Python
      on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Set up uv
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231  # v5.3.1
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Install Python
        run: uv python install ${{ env.STABLE_PYTHON_VERSION }}

      - name: Install Hatch
        run: uv tool install hatch

      - name: Typecheck
        run: hatch run typecheck

  test:
    name: >-
      Test Python ${{ matrix.python-version }}
      on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}

    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
        python-version:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          # Required for Hatch to detect the correct version
          fetch-depth: 0

      - name: Set up uv
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231  # v5.3.1
        with:
          enable-cache: true
          cache-dependency-glob: |
            **/pyproject.toml
            **/uv.lock

      - name: Install Python
        run: uv python install ${{ matrix.python-version }}

      - name: Install Hatch
        run: uv tool install hatch

      - name: Run tests
        run: hatch run test

  spelling:
    name: Spell check

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Spell Check Repo
        uses: crate-ci/typos@master

  pre-commit:
    name: Pre-commit

    runs-on: ubuntu-latest

    env:
      PRE_COMMIT_HOME: ${{ github.workspace }}/.pre-commit

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2

      - name: Cache pre-commit
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684  # v4.2.3
        with:
          path: |
            ${{ env.PRE_COMMIT_HOME }}
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      - name: Set up uv
        uses: astral-sh/setup-uv@f94ec6bedd8674c4426838e6b50417d36b6ab231  # v5.3.1
        with:
          enable-cache: true
          cache-suffix: pre-commit
          cache-dependency-glob: ''

      - name: Install pre-commit
        run: uv tool install pre-commit
      - name: Install hatch
        run: uv tool install hatch

      - name: Run pre-commit
        run: pre-commit run --show-diff-on-failure --color=always --all-files

  committed:
    name: Committed

    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683  # v4.2.2
        with:
          fetch-depth: 0

      - name: committed-action
        uses: crate-ci/committed@15229711f8f597474c0b636f327cde5969f9a529  # v1.1.7
        with:
          args: -vv --no-merge-commit --no-wip --no-fixup
